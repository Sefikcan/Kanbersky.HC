services:
  basketdb:
    container_name: basketdb
    image: redis:alpine
    ports:
    - published: 6379
      target: 6379
    restart: always
  catalogdb:
    container_name: catalogdb
    image: mongo
    ports:
    - published: 27017
      target: 27017
    restart: always
    volumes:
    - mongo_data:/data/db:rw
  elasticsearch:
    container_name: elasticsearch
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      discovery.type: single-node
      xpack.monitoring.enabled: "true"
      xpack.watcher.enabled: "false"
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1
    ports:
    - published: 9200
      target: 9200
    volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data:rw
  kanbersky.hc.basket.api:
    build:
      context: D:\WorkSpaces\Back-end\Microservices\Kanbersky.HC
      dockerfile: src/Services/Basket/Kanbersky.HC.Basket.Api/Dockerfile
    container_name: kanbersky.hc.basket.api
    depends_on:
      basketdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      CacheSettings:ConnectionString: basketdb:6379
      ElasticsearchSettings:Url: http://elasticsearch
    image: kanberskyhcbasketapi
    ports:
    - published: 8001
      target: 80
  kanbersky.hc.catalog.api:
    build:
      context: D:\WorkSpaces\Back-end\Microservices\Kanbersky.HC
      dockerfile: src/Services/Catalog/Kanbersky.HC.Catalog.Api/Dockerfile
    container_name: kanbersky.hc.catalog.api
    depends_on:
      catalogdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ElasticsearchSettings:Url: http://elasticsearch
      MongoDBSettings:ConnectionStrings: mongodb://catalogdb:27017
    image: kanberskyhccatalogapi
    ports:
    - published: 8002
      target: 80
  kanbersky.hc.ordering.api:
    build:
      context: D:\WorkSpaces\Back-end\Microservices\Kanbersky.HC
      dockerfile: src/Services/Ordering/Kanbersky.HC.Ordering.Api/Dockerfile
    container_name: kanbersky.hc.ordering.api
    depends_on:
      orderdb:
        condition: service_started
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ElasticsearchSettings:Url: http://elasticsearch
      OrderDbSettings:ConnectionStrings: Server=orderdb;Database=OrderDb;User Id=sa;Password=ttt12345678
    image: kanberskyhcorderingapi
    ports:
    - published: 8003
      target: 80
  kibana:
    container_name: kibana
    depends_on:
      elasticsearch:
        condition: service_started
    environment:
      ELASTICSEARCH_URL: http://elasticsearch
    image: docker.elastic.co/kibana/kibana:7.13.1
    ports:
    - published: 5601
      target: 5601
  orderdb:
    container_name: orderdb
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ttt12345678
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
    - published: 1433
      target: 1433
    restart: always
version: '3.4'
volumes:
  elasticsearch-data: {}
  mongo_data: {}