version: '3.4'

services:
  basketdb:
    image: redis:alpine

  catalogdb:
    image: mongo

  orderdb:
    image: mcr.microsoft.com/mssql/server:2019-latest

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.13.1

  kibana:
    image: docker.elastic.co/kibana/kibana:7.13.1

  consul:
    image: bitnami/consul:latest
  
  portainer:
    image: portainer/portainer-ce

  kanbersky.hc.basket.api:
    image: ${DOCKER_REGISTRY-}kanberskyhcbasketapi
    build:
      context: .
      dockerfile: src/Services/Basket/Kanbersky.HC.Basket.Api/Dockerfile

  kanbersky.hc.catalog.api:
    image: ${DOCKER_REGISTRY-}kanberskyhccatalogapi
    build:
      context: .
      dockerfile: src/Services/Catalog/Kanbersky.HC.Catalog.Api/Dockerfile

  kanbersky.hc.ordering.api:
    image: ${DOCKER_REGISTRY-}kanberskyhcorderingapi
    build:
      context: .
      dockerfile: src/Services/Ordering/Kanbersky.HC.Ordering.Api/Dockerfile

  kanbersky.hc.bff.api:
    image: ${DOCKER_REGISTRY-}kanberskyhcbffapi
    build:
      context: .
      dockerfile: src/BFF/Kanbersky.HC.BFF.Api/Dockerfile

  kanbersky.hc.healthstatus:
    image: ${DOCKER_REGISTRY-}kanberskyhchealthstatus
    build:
      context: .
      dockerfile: src/WebUI/Kanbersky.HC.HealthStatus/Dockerfile
  
  kanbersky.hc.gateway.api:
    image: ${DOCKER_REGISTRY-}kanberskyhcgatewayapi
    build:
      context: .
      dockerfile: src/Gateway/Kanbersky.HC.Gateway.Api/Dockerfile

networks:
  consul-network:
    driver: bridge

volumes:
    elasticsearch-data:
    mongo_data:
    portainer_data:
